-- Main GUI Library
local GUI = {}

-- Create a GUI
function GUI:CreateGUI(name)
    local player = game.Players.LocalPlayer
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = name
    screenGui.Parent = player:WaitForChild("PlayerGui")
    screenGui.ResetOnSpawn = false

    -- Create the main frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 300, 0, 400)
    mainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    mainFrame.Parent = screenGui

    -- Create a button to toggle the visibility of the GUI
    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 50, 0, 50)
    toggleButton.Position = UDim2.new(0, 10, 0, 10)
    toggleButton.Text = "â‰¡"
    toggleButton.TextSize = 20
    toggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    toggleButton.Parent = screenGui

    -- Toggle visibility function
    local function toggleVisibility()
        mainFrame.Visible = not mainFrame.Visible
    end

    -- Connect the toggle button to the visibility function
    toggleButton.MouseButton1Click:Connect(toggleVisibility)

    -- Hide the GUI by default
    mainFrame.Visible = false

    -- Return the GUI frame for further modifications
    return mainFrame
end

-- Add a Tab to the GUI
function GUI:AddTab(gui, name)
    local tabButton = Instance.new("TextButton")
    tabButton.Size = UDim2.new(1, 0, 0, 50)
    tabButton.Text = name
    tabButton.TextSize = 16
    tabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    tabButton.Parent = gui

    -- Create tab content frame
    local tabContent = Instance.new("Frame")
    tabContent.Size = UDim2.new(1, 0, 1, -50)
    tabContent.Position = UDim2.new(0, 0, 0, 50)
    tabContent.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    tabContent.Visible = false
    tabContent.Parent = gui

    -- Toggle tab content visibility when clicked
    tabButton.MouseButton1Click:Connect(function()
        tabContent.Visible = not tabContent.Visible
    end)

    -- Return the tab content frame for adding controls
    return tabContent
end

-- Add a Button to a Tab
function GUI:AddButton(tab, text, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 0, 50)
    button.Text = text
    button.TextSize = 16
    button.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    button.Parent = tab

    button.MouseButton1Click:Connect(callback)
end

-- Add a Slider to a Tab
function GUI:AddSlider(tab, text, minValue, maxValue, defaultValue, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(1, -20, 0, 50)
    sliderFrame.Position = UDim2.new(0, 10, 0, 10)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    sliderFrame.Parent = tab

    local sliderBar = Instance.new("Frame")
    sliderBar.Size = UDim2.new(1, 0, 0, 10)
    sliderBar.Position = UDim2.new(0, 0, 0, 10)
    sliderBar.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    sliderBar.Parent = sliderFrame

    local sliderIndicator = Instance.new("Frame")
    sliderIndicator.Size = UDim2.new(0, 20, 1, 0)
    sliderIndicator.Position = UDim2.new(0, defaultValue, 0, 0)
    sliderIndicator.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    sliderIndicator.Parent = sliderBar

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 20)
    label.Text = text .. ": " .. defaultValue
    label.TextSize = 16
    label.BackgroundTransparency = 1
    label.Position = UDim2.new(0, 0, 0, -20)
    label.Parent = sliderFrame

    sliderIndicator.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            local newPos = math.clamp(input.Position.X - sliderBar.AbsolutePosition.X, 0, sliderBar.AbsoluteSize.X)
            sliderIndicator.Position = UDim2.new(0, newPos, 0, 0)
            local value = math.floor((newPos / sliderBar.AbsoluteSize.X) * (maxValue - minValue) + minValue)
            label.Text = text .. ": " .. value
            if callback then
                callback(value)
            end
        end
    end)
end

-- Add a Toggle to a Tab
function GUI:AddToggle(tab, text, defaultState, callback)
    local toggle = Instance.new("Frame")
    toggle.Size = UDim2.new(1, -20, 0, 50)
    toggle.Position = UDim2.new(0, 10, 0, 10)
    toggle.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    toggle.Parent = tab

    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 50, 0, 30)
    toggleButton.Position = UDim2.new(1, -60, 0.5, -15)
    toggleButton.Text = defaultState and "ON" or "OFF"
    toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    toggleButton.Parent = toggle

    toggleButton.MouseButton1Click:Connect(function()
        local newState = toggleButton.Text == "OFF"
        toggleButton.Text = newState and "ON" or "OFF"
        if callback then
            callback(newState)
        end
    end)

    return toggle
end

return GUI
